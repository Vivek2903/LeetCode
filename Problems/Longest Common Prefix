/**
* Write a function to find the longest common prefix string amongst an array of strings.
* If there is no common prefix, return an empty string "".
*
* Example 1:
* Input: ["flower","flow","flight"]
* Output: "fl"
*
* Example 2:
* Input: ["dog","racecar","car"]
* Output: ""
* Explanation: There is no common prefix among the input strings.
* Note: All given inputs are in lowercase letters a-z.
*/
class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0) {
            return "";
        } else if(strs.length == 1) {
            return strs[0];
        }
        
        StringBuffer prefix = new StringBuffer();
        for(int i=0; i<strs[0].length(); i++) {
            char curChar = strs[0].charAt(i);
            boolean isMatched = true;
            for(int j=1; j<strs.length; j++) {
                if(!(i < strs[j].length() && curChar == strs[j].charAt(i))) {
                    isMatched = false;
                    break;
                }
            }
            
            if(!isMatched) {
                break;
            }
            
            prefix.append(curChar);
        }
        return prefix.toString();
    }
}
