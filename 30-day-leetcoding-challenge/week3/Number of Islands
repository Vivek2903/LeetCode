/**
* Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.
* Example 1:
* Input:
* 11110
* 11010
* 11000
* 00000
* Output: 1
*
* Example 2:
* Input:
* 11000
* 11000
* 00100
* 00011
* Output: 3
*/
//Can be solved in multiple ways, best implementation is with visited array
class Solution {
    public int numIslands(char[][] grid) {
        int lands = 0;
        Queue<Pair> queue = new LinkedList<>();
        for(int i=0; i<grid.length; i++) {
            for(int j=0; j<grid[i].length; j++) {
                if(grid[i][j] == '1') {
                    grid[i][j] = '0';
                    lands++;
                    queue.add(new Pair(i,j));
                    while(!queue.isEmpty()) {
                        Pair<Integer, Integer> p = queue.remove();
                        int key = p.getKey();
                        int val = p.getValue();
                        if(key > 0) {
                            if(grid[key-1][val] == '1') {
                                grid[key-1][val] = '0';
                                queue.add(new Pair(key-1, val));
                            }
                        }
                        
                        if(key < grid.length - 1) {
                            if(grid[key+1][val] == '1') {
                                grid[key+1][val] = '0';
                                queue.add(new Pair(key+1, val));
                            }
                        }
                        
                        if(val > 0) {
                            if(grid[key][val-1] == '1') {
                                grid[key][val-1] = '0';
                                queue.add(new Pair(key, val-1));
                            }
                        }
                        
                        if(val < grid[key].length - 1) {
                            if(grid[key][val+1] == '1') {
                                grid[key][val+1] = '0';
                                queue.add(new Pair(key, val+1));
                            }
                        }
                    }
                }
            }
        }
        return lands;
    }
}
