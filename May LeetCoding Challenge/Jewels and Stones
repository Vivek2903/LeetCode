/**
* You're given strings J representing the types of stones that are jewels, and S representing the stones you have.
* Each character in S is a type of stone you have. You want to know how many of the stones you have are also jewels.
* The letters in J are guaranteed distinct, and all characters in J and S are letters.
* Letters are case sensitive, so "a" is considered a different type of stone from "A".
*
* Example 1:
* Input: J = "aA", S = "aAAbbbb"
* Output: 3
*
* Example 2:
* Input: J = "z", S = "ZZ"
* Output: 0
*
* Note:
* S and J will consist of letters and have length at most 50.
* The characters in J are distinct.
*/
class Solution {
    public int numJewelsInStones(String J, String S) {
        if(J == null || J.isEmpty()
            || S == null || S.isEmpty()){
            return 0;
        }
        
        int[] jewels = new int[52];
        
        for(char c : J.toCharArray()) {
            if(c >= 65 && c <= 90) {
                jewels[c - 65] = 1;
            } else if(c >= 97 && c <= 122) {
                jewels[c - 97 + 26] = 1;
            }
        }
        
        int count = 0;
        
        for(int i=0; i<S.length(); i++) {
            char c = S.charAt(i);
            if((c >= 65 && c <= 90 && jewels[c - 65] == 1)
                || (c >= 97 && c <= 122 && jewels[c - 97 + 26] == 1)) {
                count++;
            }
        }
        
        return count;
    }
}
